kratos:
  config:
    dsn: ${DATABASE_CONNECTION_URL}
    secrets:
      default:
        - "${SECRET_KEY_1}"
    cookies:
      domain: ".${BASE_DOMAIN}"
      path: /
      same_site: Lax

    session:
      cookie:
        name: prod_anthaathi_session
    ciphers:
      algorithm: xchacha20-poly1305

    hashers:
      algorithm: bcrypt
      bcrypt:
        cost: 8

    serve:
      public:
        base_url: https://auth.${BASE_DOMAIN}/
        cors:
          enabled: true
          allowed_origins:
            - https://*.${BASE_DOMAIN}
          allowed_methods:
            - POST
            - GET
            - PUT
            - PATCH
            - DELETE
          allowed_headers:
            - Authorization
          exposed_headers:
            - Content-Type

    identity:
      default_schema_id: default
      schemas:
        - id: default
          url: file:///etc/config/identity.default.schema.json
    courier:
      smtp:
        connection_uri: ${SMTP_CONNECTION_URI}
        from_address: account-update@${BASE_DOMAIN}
        from_name: Anthaathi Account
    selfservice:
      methods:
        oidc:
          enabled: true
          config:
            base_redirect_uri: https://auth.anthaathi.dev
            providers:
              - id: google
                provider: google
                label: Google
                client_id: "${GOOGLE_CLIENT_ID}"
                client_secret: "${GOOGLE_CLIENT_SECRET}"
                mapper_url: "file:///etc/config/identity.google.schema.jsonnet"
                scope:
                  - email
                  - profile
                requested_claims:
                  id_token:
                    email:
                      essential: true
                    email_verified:
                      essential: true
                    given_name:
                      essential: true
                    family_name: null
        password:
          enabled: true
        totp:
          config:
            issuer: Anthaathi
          enabled: true
        lookup_secret:
          enabled: true
        link:
          enabled: true
        code:
          enabled: true
      flows:
        error:
          ui_url: https://auth.${BASE_DOMAIN}/v1/error

        settings:
          ui_url: https://accounts.${BASE_DOMAIN}/
          privileged_session_max_age: 30m
          required_aal: highest_available

        recovery:
          enabled: true
          ui_url: https://auth.${BASE_DOMAIN}/v1/recovery
          use: link
          lifespan: 8h
          after:
            default_browser_return_url: https://accounts.${BASE_DOMAIN}/security/change-password

        verification:
          enabled: true
          ui_url: https://auth.${BASE_DOMAIN}/v1/verification
          use: link
          after:
            default_browser_return_url: https://accounts.${BASE_DOMAIN}/

        logout:
          after:
            default_browser_return_url: https://accounts.${BASE_DOMAIN}/

        login:
          ui_url: https://auth.${BASE_DOMAIN}/v1/sign-in
          lifespan: 10m

        registration:
          lifespan: 10m
          ui_url: https://auth.${BASE_DOMAIN}/v1/sign-up
          after:
            password:
              hooks:
                - hook: session
      default_browser_return_url: https://form.${BASE_DOMAIN}/
      allowed_return_urls:
        - https://notifier.${BASE_DOMAIN}/
        - https://task.${BASE_DOMAIN}/
        - https://form.${BASE_DOMAIN}/

  automigration:
    enabled: true
    type: initContainer

  identitySchemas:
    "identity.google.schema.jsonnet": |
      local claims = {
        email_verified: true,
      } + std.extVar('claims');

      {
        identity: {
          traits: {
            [if 'email' in claims && claims.email_verified then 'email' else null]: claims.email,
            firstName: claims.given_name,
            lastName: claims.family_name,
          },
        },
      }
    "identity.default.schema.json": |
        {
          "$id": "https://schemas.ory.sh/presets/kratos/identity.email.schema.json",
          "title": "Person",
          "type": "object",
          "properties": {
            "traits": {
              "type": "object",
              "properties": {
                "firstName": {
                  "maxLength": 512,
                  "type": "string",
                  "title": "First name"
                },
                "lastName": {
                  "maxLength": 512,
                  "type": "string",
                  "title": "Last name"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "title": "E-Mail",
                  "ory.sh/kratos": {
                    "credentials": {
                      "password": {
                        "identifier": true
                      },
                      "webauthn": {
                        "identifier": true
                      },
                      "totp": {
                        "account_name": true
                      }
                    },
                    "recovery": {
                      "via": "email"
                    },
                    "verification": {
                      "via": "email"
                    }
                  },
                  "maxLength": 320
                }
              },
              "required": [
                "email",
                "firstName",
                "lastName"
              ],
              "additionalProperties": false
            }
          }
        }

deployment:
  extraVolumes:
   - name: postgresql-tls
     secret:
       secretName: ${PREFIX}-auth-pg-cluster-ca
  extraVolumeMounts:
   - name: postgresql-tls
     mountPath: "/etc/postgresql-tls"
     readOnly: true
